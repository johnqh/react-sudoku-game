{"version":3,"sources":["webpack:///./pages/Header.js?aa4a","webpack:///./pages/index.js?f7ee"],"names":["ReturnIcon","Header","onClick","propTypes","PropTypes","func","defaultProps","Description","Index","state","generateGame","finalCount","setState","addNumberAsNote","number","board","getSelectedCell","updateBoard","newBoard","history","historyOffSet","slice","push","size","canUndo","redo","Math","min","get","undo","max","eraseSelected","selectedCell","fillNumber","fillSelectedWithSolution","solution","navigator","serviceWorker","register","then","reg","console","log","scope","catch","err","warn","message","selected","getIn","x","y","renderHeader","selectCell"],"mappings":"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","file":"3.6c18d3f4dc042eef7977.hot-update.js","sourcesContent":["/* eslint-disable max-len */\n/* eslint-disable react/jsx-indent-props */\n/* eslint-disable no-mixed-operators */\n/* eslint-disable no-mixed-spaces-and-tabs */\n/* eslint-disable arrow-parens */\n/* eslint-disable react/jsx-indent */\n/* eslint-disable object-curly-newline */\n/* eslint-disable indent */\n/* eslint-disable no-tabs */\n/* eslint-disable jsx-a11y/accessible-emoji */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Tip from '../components/tool-tip';\n\nimport ReturnIcon from '../svg/return.svg';\n\nconst Header = ({ onClick }) => (\n\t<div className=\"header\">\n\t\t<div className=\"new-game\" onClick={onClick}>\n\t\t\t<ReturnIcon />\n\t\t\t<div>New Game</div>\n\t\t</div>\n\t\t<Tip />\n\t\t{/* language=CSS */}\n\t\t<style jsx>\n\t\t\t{`\n\t\t\t\t.header {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\tmax-width: 500px;\n\t\t\t\t\tpadding: 0 0.5em;\n\t\t\t\t\tbox-sizing: border-box;\n\t\t\t\t}\n\t\t\t\t.new-game {\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t\tmargin-top: 0.2em;\n\t\t\t\t\tdisplay: inline-flex;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tpadding: 0.2em 0;\n\t\t\t\t}\n\t\t\t\t.new-game :global(svg) {\n\t\t\t\t\theight: 1em;\n\t\t\t\t\tmargin-bottom: 0.3em;\n\t\t\t\t}\n\t\t\t`}\n\t\t</style>\n\t</div>\n);\n\nHeader.propTypes = {\n\tonClick: PropTypes.func,\n};\n\nHeader.defaultProps = {\n\tonClick: null,\n};\n\nexport default Header;\n\n\n\n// WEBPACK FOOTER //\n// ./pages/Header.js","/* eslint-disable no-console */\n/* eslint-disable max-len */\n/* eslint-disable react/jsx-indent-props */\n/* eslint-disable no-mixed-operators */\n/* eslint-disable no-mixed-spaces-and-tabs */\n/* eslint-disable arrow-parens */\n/* eslint-disable react/jsx-indent */\n/* eslint-disable object-curly-newline */\n/* eslint-disable indent */\n/* eslint-disable no-tabs */\n/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { Component } from 'react';\nimport NextHead from 'next/head';\n\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport css from 'styled-jsx/css';\n\nimport RangeStyle from '../input-range-style';\nimport ReturnIcon from '../svg/return.svg';\n\nimport Tip from '../components/tool-tip';\n\nimport Board from './Board';\nimport NextHeader from './NextHeader';\nimport Header from './Header';\nimport Controls from './Controls';\nimport GenerationUI from './GenerateUI';\nimport { selectCell, fillNumber, fillSelectedWithSolution, addNumberAsNote, generateGame } from './functions';\n\nconst Description = 'Discover the next evolution of Sudoku with amazing graphics, animations, and user-friendly features. Enjoy a Sudoku experience like you never have before with customizable game generation, cell highlighting, intuitive controls and more!';\n\n// eslint-disable-next-line react/no-multi-comp\nexport default class Index extends Component {\n\tstate = {};\n\n\tcomponentDidMount() {\n\t\t// eslint-disable-next-line no-undef\n\t\tif ('serviceWorker' in navigator) {\n\t\t\t// eslint-disable-next-line no-undef\n\t\t\tnavigator.serviceWorker\n\t\t\t\t.register('/service-worker.js')\n\t\t\t\t.then((reg) => {\n\t\t\t\t\tconsole.log('ServiceWorker scope: ', reg.scope);\n\t\t\t\t\tconsole.log('service worker registration successful');\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.warn('service worker registration failed', err.message);\n\t\t\t\t});\n\t\t}\n\t}\n\tgetSelectedCell() {\n\t\tconst { board } = this.state;\n\t\tconst selected = board.get('selected');\n\t\treturn selected && board.get('puzzle').getIn([selected.x, selected.y]);\n\t}\n\n\tgenerateGame = (finalCount = 20) => {\n\t\tthis.setState(generateGame(finalCount));\n\t};\n\n\taddNumberAsNote = (number) => {\n\t\tconst board = addNumberAsNote(this.state.board, this.getSelectedCell(), number);\n\t\tif (board) this.updateBoard(board);\n\t};\n\n\tupdateBoard = (newBoard) => {\n\t\tlet { history } = this.state;\n\t\tconst { historyOffSet } = this.state;\n\t\t// anything before current step is still in history\n\t\thistory = history.slice(0, historyOffSet + 1);\n\t\t// add itself onto the history\n\t\thistory = history.push(newBoard);\n\t\t// update the game\n\t\tthis.setState({ board: newBoard, history, historyOffSet: history.size - 1 });\n\t};\n\n\tcanUndo = () => this.state.historyOffSet > 0;\n\n\tredo = () => {\n\t\tconst { history } = this.state;\n\t\tlet { historyOffSet } = this.state;\n\t\tif (history.size) {\n\t\t\thistoryOffSet = Math.min(history.size - 1, historyOffSet + 1);\n\t\t\tconst board = history.get(historyOffSet);\n\t\t\tthis.setState({ board, historyOffSet });\n\t\t}\n\t};\n\n\tundo = () => {\n\t\tconst { history } = this.state;\n\t\tlet { historyOffSet, board } = this.state;\n\t\tif (history.size) {\n\t\t\thistoryOffSet = Math.max(0, historyOffSet - 1);\n\t\t\tboard = history.get(historyOffSet);\n\t\t\tthis.setState({ board, historyOffSet, history });\n\t\t}\n\t};\n\n\teraseSelected = () => {\n\t\tconst selectedCell = this.getSelectedCell();\n\t\tif (!selectedCell) return;\n\t\tthis.fillNumber(false);\n\t};\n\n\tfillSelectedWithSolution = () => {\n\t\tconst { board, solution } = this.state;\n\t\tconst selectedCell = this.getSelectedCell();\n\n\t\tthis.fillNumber(fillSelectedWithSolution(board, solution, selectedCell));\n\t};\n\n\t// fill currently selected cell with number\n\tfillNumber = (number) => {\n\t\tconst selectedCell = this.getSelectedCell();\n\n\t\tthis.updateBoard(fillNumber(this.state.board, selectedCell, number));\n\t};\n\n\trenderHeader() {\n\t\treturn (\n\t\t\t<div className=\"header\">\n\t\t\t\t<div className=\"new-game\" onClick={() => this.setState({ board: false })}>\n\t\t\t\t\t<ReturnIcon />\n\t\t\t\t\t<div>New Game</div>\n\t\t\t\t</div>\n\t\t\t\t<Tip />\n\t\t\t\t{/* language=CSS */}\n\t\t\t\t<style jsx>\n\t\t\t\t\t{`\n\t\t\t\t\t\t.header {\n\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\t\t\tmax-width: 500px;\n\t\t\t\t\t\t\tpadding: 0 0.5em;\n\t\t\t\t\t\t\tbox-sizing: border-box;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.new-game {\n\t\t\t\t\t\t\tcursor: pointer;\n\t\t\t\t\t\t\tmargin-top: 0.2em;\n\t\t\t\t\t\t\tdisplay: inline-flex;\n\t\t\t\t\t\t\tjustify-content: center;\n\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\tpadding: 0.2em 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.new-game :global(svg) {\n\t\t\t\t\t\t\theight: 1em;\n\t\t\t\t\t\t\tmargin-bottom: 0.3em;\n\t\t\t\t\t\t}\n\t\t\t\t\t`}\n\t\t\t\t</style>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst { board, history } = this.state;\n\t\treturn (\n\t\t\t<div className=\"body\">\n\t\t\t\t<NextHeader />\n\t\t\t\t{!board && <GenerationUI generateGame={this.generateGame} />}\n\t\t\t\t{board && this.renderHeader()}\n\t\t\t\t{board && (\n\t\t\t\t\t<Board\n\t\t\t\t\t\tboard={this.state.board}\n\t\t\t\t\t\tselected={this.getSelectedCell()}\n\t\t\t\t\t\tonClick={(x, y) => {\n\t\t\t\t\t\t\tthis.setState({ board: selectCell(this.state.board, x, y) });\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{board && <Controls board={board} selected={this.getSelectedCell()} fillNumber={this.fillNumber} fillNote={this.addNumberAsNote} history={history} undo={this.undo} redo={this.redo} erase={this.eraseSelected} solution={this.fillSelectedWithSolution} className=\"controls\" />}\n\t\t\t\t{/* language=CSS */}\n\t\t\t\t<style jsx>\n\t\t\t\t\t{`\n\t\t\t\t\t\t:global(body),\n\t\t\t\t\t\t.body {\n\t\t\t\t\t\t\tfont-family: 'Special Elite', cursive;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.body {\n\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\tflex-direction: column;\n\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\tjustify-content: center;\n\t\t\t\t\t\t\theight: 100vh;\n\t\t\t\t\t\t\twidth: 100vw;\n\t\t\t\t\t\t\tposition: relative;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@media (min-width: 800px) and (min-height: 930px) {\n\t\t\t\t\t\t\t:global(.header, .puzzle, .controls) {\n\t\t\t\t\t\t\t\tfont-size: 1.5em;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@media (max-width: 800px) and (min-width: 600px) {\n\t\t\t\t\t\t\t:global(.header, .puzzle, .controls) {\n\t\t\t\t\t\t\t\tfont-size: 1.2em;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@media (max-height: 930px) and (min-height: 800px) and (min-width: 600px) {\n\t\t\t\t\t\t\t:global(.header, .puzzle, .controls) {\n\t\t\t\t\t\t\t\tfont-size: 1.2em;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@media (max-height: 800px) and (min-height: 600px) and (min-width: 370px) {\n\t\t\t\t\t\t\t:global(.header, .puzzle, .controls) {\n\t\t\t\t\t\t\t\tfont-size: 1em;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@media (max-width: 370px) {\n\t\t\t\t\t\t\t:global(.header, .puzzle, .controls) {\n\t\t\t\t\t\t\t\tfont-size: 0.8em;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@media (max-height: 600px) {\n\t\t\t\t\t\t\t:global(.header, .puzzle, .controls) {\n\t\t\t\t\t\t\t\tfont-size: 0.8em;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t:global(body) {\n\t\t\t\t\t\t\tmargin: 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.rooter {\n\t\t\t\t\t\t\tposition: fixed;\n\t\t\t\t\t\t\tbottom: 0;\n\t\t\t\t\t\t\tfont-size: 0.8em;\n\t\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\t}\n\t\t\t\t\t`}\n\t\t\t\t</style>\n\t\t\t\t<style jsx global>\n\t\t\t\t\t{RangeStyle}\n\t\t\t\t</style>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./pages/index.js"],"sourceRoot":""}