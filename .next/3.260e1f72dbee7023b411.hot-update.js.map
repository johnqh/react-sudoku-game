{"version":3,"sources":["webpack:///./pages/functions.js?34ea","webpack:///./pages/index.js?f7ee"],"names":["makeCountObject","countObj","i","push","makeBoard","puzzle","rows","Array","from","keys","map","columns","squares","result","row","cell","j","Math","floor","value","prefilled","fromJS","selected","choices","updateBoardWithNumber","x","y","number","fill","board","get","getIn","delete","set","increment","rowPath","columnPath","squarePath","setIn","selectCell","isConflict","toJSON","rowConflict","columnConflict","squareConflict","fillNumber","oldBoard","selectedCell","currentValue","setNumber","LoupeIcon","RemoveIcon","ReloadIcon","ReturnIcon","Description","ActionsStyle","ControlStyle","PuzzleStyle","cellWidth","getClickHandler","onClick","onDoubleClick","delay","timeoutID","event","setTimeout","clearTimeout","getNumberOfGroupsAssignedForNumber","groups","reduce","accumulator","Index","state","generateGame","finalCount","console","log","solution","makePuzzle","pluck","setState","history","List","of","historyOffSet","addNumberAsNote","getSelectedCell","notes","Set","has","add","updateBoard","newBoard","slice","size","canUndo","redo","min","undo","max","eraseSelected","fillSelectedWithSolution","navigator","serviceWorker","register","then","reg","scope","catch","err","warn","message","conflict","peer","areCoordinatePeers","sameValue","isSelected","range","clickHandle","undefined","getNumberValueCount","renderCell","toArray","renderNumberControl","renderActions","renderGenerationUI","renderHeader","renderPuzzle","renderControls"],"mappings":"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","file":"3.260e1f72dbee7023b411.hot-update.js","sourcesContent":["/* eslint-disable consistent-return */\n/* eslint-disable no-param-reassign */\n/* eslint-disable max-len */\n/* eslint-disable react/jsx-indent-props */\n/* eslint-disable no-mixed-operators */\n/* eslint-disable no-mixed-spaces-and-tabs */\n/* eslint-disable arrow-parens */\n/* eslint-disable react/jsx-indent */\n/* eslint-disable object-curly-newline */\n/* eslint-disable indent */\n/* eslint-disable no-tabs */\n/* eslint-disable jsx-a11y/accessible-emoji */\n\nimport { fromJS } from 'immutable';\n\n/**\n * make size 9 array of 0s\n * @returns {Array}\n */\nfunction makeCountObject() {\n\tconst countObj = [];\n\tfor (let i = 0; i < 10; i += 1) countObj.push(0);\n\treturn countObj;\n}\n\n/**\n * given a 2D array of numbers as the initial puzzle, generate the initial game state\n * @param puzzle\n * @returns {any}\n */\nexport function makeBoard({ puzzle }) {\n\t// create initial count object to keep track of conflicts per number value\n\tconst rows = Array.from(Array(9).keys()).map(() => makeCountObject());\n\tconst columns = Array.from(Array(9).keys()).map(() => makeCountObject());\n\tconst squares = Array.from(Array(9).keys()).map(() => makeCountObject());\n\tconst result = puzzle.map((row, i) =>\n\t\trow.map((cell, j) => {\n\t\t\tif (cell) {\n\t\t\t\trows[i][cell] += 1;\n\t\t\t\tcolumns[j][cell] += 1;\n\t\t\t\tsquares[Math.floor(i / 3) * 3 + Math.floor(j / 3)][cell] += 1;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tvalue: puzzle[i][j] > 0 ? puzzle[i][j] : null,\n\t\t\t\tprefilled: !!puzzle[i][j],\n\t\t\t};\n\t\t})\n\t);\n\treturn fromJS({ puzzle: result, selected: false, choices: { rows, columns, squares } });\n}\n\n/**\n * give the coordinate update the current board with a number choice\n * @param x\n * @param y\n * @param number\n * @param fill whether to set or unset\n * @param board the immutable board given to change\n */\nexport function updateBoardWithNumber({ x, y, number, fill = true, board }) {\n\tlet cell = board.get('puzzle').getIn([x, y]);\n\t// delete its notes\n\tcell = cell.delete('notes');\n\t// set or unset its value depending on `fill`\n\tcell = fill ? cell.set('value', number) : cell.delete('value');\n\tconst increment = fill ? 1 : -1;\n\t// update the current group choices\n\tconst rowPath = ['choices', 'rows', x, number];\n\tconst columnPath = ['choices', 'columns', y, number];\n\tconst squarePath = ['choices', 'squares', Math.floor(x / 3) * 3 + Math.floor(y / 3), number];\n\treturn board\n\t\t.setIn(rowPath, board.getIn(rowPath) + increment)\n\t\t.setIn(columnPath, board.getIn(columnPath) + increment)\n\t\t.setIn(squarePath, board.getIn(squarePath) + increment)\n\t\t.setIn(['puzzle', x, y], cell);\n}\n\nexport function selectCell(board, x, y) {\n\treturn board.set('selected', { x, y });\n}\n\nexport function isConflict(board, i, j) {\n\tconst { value } = board.getIn(['puzzle', i, j]).toJSON();\n\tif (!value) return false;\n\tconst rowConflict = board.getIn(['choices', 'rows', i, value]) > 1;\n\tconst columnConflict = board.getIn(['choices', 'columns', j, value]) > 1;\n\tconst squareConflict = board.getIn(['choices', 'squares', Math.floor(i / 3) * 3 + Math.floor(j / 3), value]) > 1;\n\treturn rowConflict || columnConflict || squareConflict;\n}\n\nexport function fillNumber(oldBoard, selectedCell, number) {\n\tlet board = oldBoard;\n\t// no-op if nothing is selected\n\tif (!selectedCell) return;\n\tconst prefilled = selectedCell.get('prefilled');\n\t// no-op if it is refilled\n\tif (prefilled) return;\n\tconst { x, y } = board.get('selected');\n\tconst currentValue = selectedCell.get('value');\n\t// remove the current value and update the game state\n\tif (currentValue) {\n\t\tboard = updateBoardWithNumber({\n\t\t\tx,\n\t\t\ty,\n\t\t\tnumber: currentValue,\n\t\t\tfill: false,\n\t\t\tboard,\n\t\t});\n\t}\n\t// update to new number if any\n\tconst setNumber = currentValue !== number && number;\n\tif (setNumber) {\n\t\tboard = updateBoardWithNumber({\n\t\t\tx,\n\t\t\ty,\n\t\t\tnumber,\n\t\t\tfill: true,\n\t\t\tboard,\n\t\t});\n\t}\n\treturn board;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./pages/functions.js","/* eslint-disable no-console */\n/* eslint-disable max-len */\n/* eslint-disable react/jsx-indent-props */\n/* eslint-disable no-mixed-operators */\n/* eslint-disable no-mixed-spaces-and-tabs */\n/* eslint-disable arrow-parens */\n/* eslint-disable react/jsx-indent */\n/* eslint-disable object-curly-newline */\n/* eslint-disable indent */\n/* eslint-disable no-tabs */\n/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { Component } from 'react';\nimport { Set, List, fromJS } from 'immutable';\nimport PropTypes from 'prop-types';\nimport NextHead from 'next/head';\nimport Color from 'color';\nimport InputRange from 'react-input-range';\n\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport css from 'styled-jsx/css';\n\nimport RangeStyle from '../input-range-style';\nimport LoupeIcon from '../svg/loupe.svg';\nimport RemoveIcon from '../svg/remove.svg';\nimport ReloadIcon from '../svg/reload.svg';\nimport ReturnIcon from '../svg/return.svg';\n\nimport { makePuzzle, pluck, isPeer as areCoordinatePeers, range } from '../sudoku';\nimport { backGroundBlue } from '../colors';\nimport Tip from '../components/tool-tip';\n\nimport Cell from './Cell';\nimport NumberControl from './NumberControl';\nimport GenerationUI from './GenerateUI';\nimport { cellWidth } from './utils';\nimport { makeBoard, updateBoardWithNumber, selectCell, isConflict, fillNumber } from './functions';\n\nconst Description = 'Discover the next evolution of Sudoku with amazing graphics, animations, and user-friendly features. Enjoy a Sudoku experience like you never have before with customizable game generation, cell highlighting, intuitive controls and more!';\n\n// eslint-disable-next-line no-lone-blocks\n{\n\t/* language=CSS */\n}\nconst ActionsStyle = css`\n\t.actions {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: space-between;\n\t\twidth: 100%;\n\t\tmax-width: 400px;\n\t\tmargin-top: 0.5em;\n\t\tpadding: 0 0.6em;\n\t}\n\t.action {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tflex-direction: column;\n\t}\n\t.action :global(svg) {\n\t\twidth: 2.5em;\n\t\tmargin-bottom: 0.2em;\n\t}\n\t.redo :global(svg) {\n\t\ttransform: scaleX(-1);\n\t}\n`;\n\n// eslint-disable-next-line no-lone-blocks\n{\n\t/* language=CSS */\n}\nconst ControlStyle = css`\n\t.control {\n\t\tpadding: 0 2em;\n\t\tcursor: pointer;\n\t\tdisplay: inline-flex;\n\t\talign-items: center;\n\t\tflex-wrap: wrap;\n\t\tjustify-content: center;\n\t\tfont-family: 'Special Elite', cursive;\n\t\ttransition: filter 0.5s ease-in-out;\n\t\twidth: 100%;\n\t}\n`;\n\n// eslint-disable-next-line no-lone-blocks\n{\n\t/* language=CSS */\n}\nconst PuzzleStyle = css`\n\t.puzzle {\n\t\tmargin-top: 0.5em;\n\t\twidth: ${cellWidth * 9}em;\n\t\tcursor: pointer;\n\t\tbox-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n\t}\n\t.row {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tflex: 0;\n\t\twidth: ${cellWidth * 9}em;\n\t}\n\t.row:not(:last-child) {\n\t\tborder-bottom: 1px solid black;\n\t}\n\t.row:nth-child(3n + 3):not(:last-child) {\n\t\tborder-bottom: 2px solid black !important;\n\t}\n`;\n\nfunction getClickHandler(onClick, onDoubleClick, delay = 250) {\n\tlet timeoutID = null;\n\treturn (event) => {\n\t\tif (!timeoutID) {\n\t\t\ttimeoutID = setTimeout(() => {\n\t\t\t\tonClick(event);\n\t\t\t\ttimeoutID = null;\n\t\t\t}, delay);\n\t\t} else {\n\t\t\ttimeoutID = clearTimeout(timeoutID);\n\t\t\tonDoubleClick(event);\n\t\t}\n\t};\n}\n\nfunction getNumberOfGroupsAssignedForNumber(number, groups) {\n\treturn groups.reduce((accumulator, row) => accumulator + (row.get(number) > 0 ? 1 : 0), 0);\n}\n// eslint-disable-next-line react/no-multi-comp\nexport default class Index extends Component {\n\tstate = {};\n\n\tcomponentDidMount() {\n\t\t// eslint-disable-next-line no-undef\n\t\tif ('serviceWorker' in navigator) {\n\t\t\t// eslint-disable-next-line no-undef\n\t\t\tnavigator.serviceWorker\n\t\t\t\t.register('/service-worker.js')\n\t\t\t\t.then((reg) => {\n\t\t\t\t\tconsole.log('ServiceWorker scope: ', reg.scope);\n\t\t\t\t\tconsole.log('service worker registration successful');\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.warn('service worker registration failed', err.message);\n\t\t\t\t});\n\t\t}\n\t}\n\tgetSelectedCell() {\n\t\tconst { board } = this.state;\n\t\tconst selected = board.get('selected');\n\t\treturn selected && board.get('puzzle').getIn([selected.x, selected.y]);\n\t}\n\n\t// get the min between its completion in rows, columns and squares.\n\tgetNumberValueCount(number) {\n\t\tconst rows = this.state.board.getIn(['choices', 'rows']);\n\t\tconst columns = this.state.board.getIn(['choices', 'columns']);\n\t\tconst squares = this.state.board.getIn(['choices', 'squares']);\n\t\treturn Math.min(getNumberOfGroupsAssignedForNumber(number, squares), Math.min(getNumberOfGroupsAssignedForNumber(number, rows), getNumberOfGroupsAssignedForNumber(number, columns)));\n\t}\n\n\tgenerateGame = (finalCount = 20) => {\n\t\tconsole.log('generating');\n\t\t// get a filled puzzle generated\n\t\tconst solution = makePuzzle();\n\t\t// pluck values from cells to create the game\n\t\tconst { puzzle } = pluck(solution, finalCount);\n\t\t// initialize the board with choice counts\n\t\tconst board = makeBoard({ puzzle });\n\t\tthis.setState({\n\t\t\tboard,\n\t\t\thistory: List.of(board),\n\t\t\thistoryOffSet: 0,\n\t\t\tsolution,\n\t\t});\n\t};\n\n\taddNumberAsNote = (number) => {\n\t\tlet { board } = this.state;\n\t\tlet selectedCell = this.getSelectedCell();\n\t\tif (!selectedCell) return;\n\t\tconst prefilled = selectedCell.get('prefilled');\n\t\tif (prefilled) return;\n\t\tconst { x, y } = board.get('selected');\n\t\tconst currentValue = selectedCell.get('value');\n\t\tif (currentValue) {\n\t\t\tboard = updateBoardWithNumber({\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t\tnumber: currentValue,\n\t\t\t\tfill: false,\n\t\t\t\tboard: this.state.board,\n\t\t\t});\n\t\t}\n\t\tlet notes = selectedCell.get('notes') || Set();\n\t\tif (notes.has(number)) {\n\t\t\tnotes = notes.delete(number);\n\t\t} else {\n\t\t\tnotes = notes.add(number);\n\t\t}\n\t\tselectedCell = selectedCell.set('notes', notes);\n\t\tselectedCell = selectedCell.delete('value');\n\t\tboard = board.setIn(['puzzle', x, y], selectedCell);\n\t\tthis.updateBoard(board);\n\t};\n\n\tupdateBoard = (newBoard) => {\n\t\tlet { history } = this.state;\n\t\tconst { historyOffSet } = this.state;\n\t\t// anything before current step is still in history\n\t\thistory = history.slice(0, historyOffSet + 1);\n\t\t// add itself onto the history\n\t\thistory = history.push(newBoard);\n\t\t// update the game\n\t\tthis.setState({ board: newBoard, history, historyOffSet: history.size - 1 });\n\t};\n\n\tcanUndo = () => this.state.historyOffSet > 0;\n\n\tredo = () => {\n\t\tconst { history } = this.state;\n\t\tlet { historyOffSet } = this.state;\n\t\tif (history.size) {\n\t\t\thistoryOffSet = Math.min(history.size - 1, historyOffSet + 1);\n\t\t\tconst board = history.get(historyOffSet);\n\t\t\tthis.setState({ board, historyOffSet });\n\t\t}\n\t};\n\n\tundo = () => {\n\t\tconst { history } = this.state;\n\t\tlet { historyOffSet, board } = this.state;\n\t\tif (history.size) {\n\t\t\thistoryOffSet = Math.max(0, historyOffSet - 1);\n\t\t\tboard = history.get(historyOffSet);\n\t\t\tthis.setState({ board, historyOffSet, history });\n\t\t}\n\t};\n\n\teraseSelected = () => {\n\t\tconst selectedCell = this.getSelectedCell();\n\t\tif (!selectedCell) return;\n\t\tthis.fillNumber(false);\n\t};\n\n\tfillSelectedWithSolution = () => {\n\t\tconst { board, solution } = this.state;\n\t\tconst selectedCell = this.getSelectedCell();\n\t\tif (!selectedCell) return;\n\t\tconst { x, y } = board.get('selected');\n\t\tthis.fillNumber(solution[x][y]);\n\t};\n\n\t// fill currently selected cell with number\n\tfillNumber = (number) => {\n\t\tconst selectedCell = this.getSelectedCell();\n\n\t\tthis.updateBoard(fillNumber(this.state.board, selectedCell, number));\n\t};\n\n\trenderCell(cell, x, y) {\n\t\tconst { board } = this.state;\n\t\tconst selected = this.getSelectedCell();\n\t\tconst { value, prefilled, notes } = cell.toJSON();\n\t\tconst conflict = isConflict(this.state.board, x, y);\n\t\tconst peer = areCoordinatePeers({ x, y }, board.get('selected'));\n\t\tconst sameValue = !!(selected && selected.get('value') && value === selected.get('value'));\n\n\t\tconst isSelected = cell === selected;\n\t\treturn (\n\t\t\t<Cell\n\t\t\t\tprefilled={prefilled}\n\t\t\t\tnotes={notes}\n\t\t\t\tsameValue={sameValue}\n\t\t\t\tisSelected={isSelected}\n\t\t\t\tisPeer={peer}\n\t\t\t\tvalue={value}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tthis.setState({ board: selectCell(this.state.board, x, y) });\n\t\t\t\t}}\n\t\t\t\tkey={y}\n\t\t\t\tx={x}\n\t\t\t\ty={y}\n\t\t\t\tconflict={conflict}\n\t\t\t/>\n\t\t);\n\t}\n\n\trenderNumberControl() {\n\t\tconst selectedCell = this.getSelectedCell();\n\t\tconst prefilled = selectedCell && selectedCell.get('prefilled');\n\t\treturn (\n\t\t\t<div className=\"control\">\n\t\t\t\t{range(9).map((i) => {\n\t\t\t\t\tconst number = i + 1;\n\t\t\t\t\t// handles binding single click and double click callbacks\n\t\t\t\t\tconst clickHandle = getClickHandler(\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tthis.fillNumber(number);\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tthis.addNumberAsNote(number);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\treturn <NumberControl key={number} number={number} onClick={!prefilled ? clickHandle : undefined} completionPercentage={this.getNumberValueCount(number) / 9} />;\n\t\t\t\t})}\n\t\t\t\t<style jsx>{ControlStyle}</style>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trenderActions() {\n\t\tconst { history } = this.state;\n\t\tconst selectedCell = this.getSelectedCell();\n\t\tconst prefilled = selectedCell && selectedCell.get('prefilled');\n\t\treturn (\n\t\t\t<div className=\"actions\">\n\t\t\t\t<div className=\"action\" onClick={history.size ? this.undo : null}>\n\t\t\t\t\t<ReloadIcon />\n\t\t\t\t\tUndo\n\t\t\t\t</div>\n\t\t\t\t<div className=\"action redo\" onClick={history.size ? this.redo : null}>\n\t\t\t\t\t<ReloadIcon />\n\t\t\t\t\tRedo\n\t\t\t\t</div>\n\t\t\t\t<div className=\"action\" onClick={!prefilled ? this.eraseSelected : null}>\n\t\t\t\t\t<RemoveIcon />\n\t\t\t\t\tErase\n\t\t\t\t</div>\n\t\t\t\t<div className=\"action\" onClick={!prefilled ? this.fillSelectedWithSolution : null}>\n\t\t\t\t\t<LoupeIcon />\n\t\t\t\t\tHint\n\t\t\t\t</div>\n\t\t\t\t<style jsx>{ActionsStyle}</style>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trenderPuzzle() {\n\t\tconst { board } = this.state;\n\t\treturn (\n\t\t\t<div className=\"puzzle\">\n\t\t\t\t{board\n\t\t\t\t\t.get('puzzle')\n\t\t\t\t\t.map((row, i) => (\n\t\t\t\t\t\t// eslint-disable-next-line react/no-array-index-key\n\t\t\t\t\t\t<div key={i} className=\"row\">\n\t\t\t\t\t\t\t{row.map((cell, j) => this.renderCell(cell, i, j)).toArray()}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))\n\t\t\t\t\t.toArray()}\n\t\t\t\t<style jsx>{PuzzleStyle}</style>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trenderControls() {\n\t\treturn (\n\t\t\t<div className=\"controls\">\n\t\t\t\t{this.renderNumberControl()}\n\t\t\t\t{this.renderActions()}\n\t\t\t\t{/* language=CSS */}\n\t\t\t\t<style jsx>\n\t\t\t\t\t{`\n\t\t\t\t\t\t.controls {\n\t\t\t\t\t\t\tmargin-top: 0.3em;\n\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\tflex-wrap: wrap;\n\t\t\t\t\t\t\tjustify-content: center;\n\t\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\t\tpadding: 0.5em 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t`}\n\t\t\t\t</style>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trenderGenerationUI() {\n\t\treturn <GenerationUI generateGame={this.generateGame} />;\n\t}\n\n\trenderHeader() {\n\t\treturn (\n\t\t\t<div className=\"header\">\n\t\t\t\t<div className=\"new-game\" onClick={() => this.setState({ board: false })}>\n\t\t\t\t\t<ReturnIcon />\n\t\t\t\t\t<div>New Game</div>\n\t\t\t\t</div>\n\t\t\t\t<Tip />\n\t\t\t\t{/* language=CSS */}\n\t\t\t\t<style jsx>\n\t\t\t\t\t{`\n\t\t\t\t\t\t.header {\n\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\t\t\tmax-width: 500px;\n\t\t\t\t\t\t\tpadding: 0 0.5em;\n\t\t\t\t\t\t\tbox-sizing: border-box;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.new-game {\n\t\t\t\t\t\t\tcursor: pointer;\n\t\t\t\t\t\t\tmargin-top: 0.2em;\n\t\t\t\t\t\t\tdisplay: inline-flex;\n\t\t\t\t\t\t\tjustify-content: center;\n\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\tpadding: 0.2em 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.new-game :global(svg) {\n\t\t\t\t\t\t\theight: 1em;\n\t\t\t\t\t\t\tmargin-bottom: 0.3em;\n\t\t\t\t\t\t}\n\t\t\t\t\t`}\n\t\t\t\t</style>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst { board } = this.state;\n\t\treturn (\n\t\t\t<div className=\"body\">\n\t\t\t\t<NextHead>\n\t\t\t\t\t<title>Sudoku Evolved</title>\n\t\t\t\t\t<meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\n\t\t\t\t\t<meta name=\"description\" content={Description} />\n\t\t\t\t\t<link href=\"https://fonts.googleapis.com/css?family=Special+Elite\" rel=\"stylesheet\" />\n\t\t\t\t\t<meta property=\"og:url\" content=\"https://sudoku.sitianliu.com/\" />\n\t\t\t\t\t<meta property=\"og:title\" content=\"Sudoku Evolved\" />\n\t\t\t\t\t<meta property=\"og:type\" content=\"website\" />\n\t\t\t\t\t<meta property=\"og:description\" content={Description} />\n\t\t\t\t\t<meta property=\"og:image\" content=\"https://sudoku.sitianliu.com/static/og-image.png\" />\n\t\t\t\t</NextHead>\n\t\t\t\t{!board && this.renderGenerationUI()}\n\t\t\t\t{board && this.renderHeader()}\n\t\t\t\t{board && this.renderPuzzle()}\n\t\t\t\t{board && this.renderControls()}\n\t\t\t\t<div className=\"rooter\">\n\t\t\t\t\tMade with <span>❤️</span>️ By <a href=\"https://www.sitianliu.com/\">Sitian Liu</a> | <a href=\"https://medium.com/@sitianliu_57680/building-a-sudoku-game-in-react-ca663915712\">Blog Post</a>\n\t\t\t\t</div>\n\t\t\t\t{/* language=CSS */}\n\t\t\t\t<style jsx>\n\t\t\t\t\t{`\n\t\t\t\t\t\t:global(body),\n\t\t\t\t\t\t.body {\n\t\t\t\t\t\t\tfont-family: 'Special Elite', cursive;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.body {\n\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\tflex-direction: column;\n\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\tjustify-content: center;\n\t\t\t\t\t\t\theight: 100vh;\n\t\t\t\t\t\t\twidth: 100vw;\n\t\t\t\t\t\t\tposition: relative;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@media (min-width: 800px) and (min-height: 930px) {\n\t\t\t\t\t\t\t:global(.header, .puzzle, .controls) {\n\t\t\t\t\t\t\t\tfont-size: 1.5em;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@media (max-width: 800px) and (min-width: 600px) {\n\t\t\t\t\t\t\t:global(.header, .puzzle, .controls) {\n\t\t\t\t\t\t\t\tfont-size: 1.2em;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@media (max-height: 930px) and (min-height: 800px) and (min-width: 600px) {\n\t\t\t\t\t\t\t:global(.header, .puzzle, .controls) {\n\t\t\t\t\t\t\t\tfont-size: 1.2em;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@media (max-height: 800px) and (min-height: 600px) and (min-width: 370px) {\n\t\t\t\t\t\t\t:global(.header, .puzzle, .controls) {\n\t\t\t\t\t\t\t\tfont-size: 1em;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@media (max-width: 370px) {\n\t\t\t\t\t\t\t:global(.header, .puzzle, .controls) {\n\t\t\t\t\t\t\t\tfont-size: 0.8em;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@media (max-height: 600px) {\n\t\t\t\t\t\t\t:global(.header, .puzzle, .controls) {\n\t\t\t\t\t\t\t\tfont-size: 0.8em;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t:global(body) {\n\t\t\t\t\t\t\tmargin: 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.rooter {\n\t\t\t\t\t\t\tposition: fixed;\n\t\t\t\t\t\t\tbottom: 0;\n\t\t\t\t\t\t\tfont-size: 0.8em;\n\t\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\t}\n\t\t\t\t\t`}\n\t\t\t\t</style>\n\t\t\t\t<style jsx global>\n\t\t\t\t\t{RangeStyle}\n\t\t\t\t</style>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./pages/index.js"],"sourceRoot":""}