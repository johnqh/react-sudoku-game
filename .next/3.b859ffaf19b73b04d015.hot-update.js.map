{"version":3,"sources":["webpack:///./pages/index.js?f7ee"],"names":["LoupeIcon","RemoveIcon","ReloadIcon","ReturnIcon","Description","ActionsStyle","ControlStyle","PuzzleStyle","cellWidth","getClickHandler","onClick","onDoubleClick","delay","timeoutID","event","setTimeout","clearTimeout","getNumberOfGroupsAssignedForNumber","number","groups","reduce","accumulator","row","get","Index","state","generateGame","finalCount","console","log","solution","makePuzzle","pluck","puzzle","board","makeBoard","setState","history","List","of","historyOffSet","addNumberAsNote","getSelectedCell","updateBoard","newBoard","slice","push","size","canUndo","redo","Math","min","undo","max","eraseSelected","selectedCell","fillNumber","fillSelectedWithSolution","navigator","serviceWorker","register","then","reg","scope","catch","err","warn","message","selected","getIn","x","y","rows","columns","squares","cell","toJSON","value","prefilled","notes","conflict","isConflict","peer","areCoordinatePeers","sameValue","isSelected","selectCell","range","map","i","clickHandle","undefined","getNumberValueCount","j","renderCell","toArray","renderNumberControl","renderActions","renderGenerationUI","renderHeader","renderPuzzle","renderControls"],"mappings":"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","file":"3.b859ffaf19b73b04d015.hot-update.js","sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable max-len */\n/* eslint-disable react/jsx-indent-props */\n/* eslint-disable no-mixed-operators */\n/* eslint-disable no-mixed-spaces-and-tabs */\n/* eslint-disable arrow-parens */\n/* eslint-disable react/jsx-indent */\n/* eslint-disable object-curly-newline */\n/* eslint-disable indent */\n/* eslint-disable no-tabs */\n/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { Component } from 'react';\nimport { Set, List } from 'immutable';\nimport NextHead from 'next/head';\n\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport css from 'styled-jsx/css';\n\nimport RangeStyle from '../input-range-style';\nimport LoupeIcon from '../svg/loupe.svg';\nimport RemoveIcon from '../svg/remove.svg';\nimport ReloadIcon from '../svg/reload.svg';\nimport ReturnIcon from '../svg/return.svg';\n\nimport { makePuzzle, pluck, isPeer as areCoordinatePeers, range } from '../sudoku';\nimport Tip from '../components/tool-tip';\n\nimport Cell from './Cell';\nimport NumberControl from './NumberControl';\nimport GenerationUI from './GenerateUI';\nimport { cellWidth } from './utils';\nimport { makeBoard, updateBoardWithNumber, selectCell, isConflict, fillNumber, fillSelectedWithSolution, addNumberAsNote } from './functions';\n\nconst Description = 'Discover the next evolution of Sudoku with amazing graphics, animations, and user-friendly features. Enjoy a Sudoku experience like you never have before with customizable game generation, cell highlighting, intuitive controls and more!';\n\n// eslint-disable-next-line no-lone-blocks\n{\n\t/* language=CSS */\n}\nconst ActionsStyle = css`\n\t.actions {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: space-between;\n\t\twidth: 100%;\n\t\tmax-width: 400px;\n\t\tmargin-top: 0.5em;\n\t\tpadding: 0 0.6em;\n\t}\n\t.action {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tflex-direction: column;\n\t}\n\t.action :global(svg) {\n\t\twidth: 2.5em;\n\t\tmargin-bottom: 0.2em;\n\t}\n\t.redo :global(svg) {\n\t\ttransform: scaleX(-1);\n\t}\n`;\n\n// eslint-disable-next-line no-lone-blocks\n{\n\t/* language=CSS */\n}\nconst ControlStyle = css`\n\t.control {\n\t\tpadding: 0 2em;\n\t\tcursor: pointer;\n\t\tdisplay: inline-flex;\n\t\talign-items: center;\n\t\tflex-wrap: wrap;\n\t\tjustify-content: center;\n\t\tfont-family: 'Special Elite', cursive;\n\t\ttransition: filter 0.5s ease-in-out;\n\t\twidth: 100%;\n\t}\n`;\n\n// eslint-disable-next-line no-lone-blocks\n{\n\t/* language=CSS */\n}\nconst PuzzleStyle = css`\n\t.puzzle {\n\t\tmargin-top: 0.5em;\n\t\twidth: ${cellWidth * 9}em;\n\t\tcursor: pointer;\n\t\tbox-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n\t}\n\t.row {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tflex: 0;\n\t\twidth: ${cellWidth * 9}em;\n\t}\n\t.row:not(:last-child) {\n\t\tborder-bottom: 1px solid black;\n\t}\n\t.row:nth-child(3n + 3):not(:last-child) {\n\t\tborder-bottom: 2px solid black !important;\n\t}\n`;\n\nfunction getClickHandler(onClick, onDoubleClick, delay = 250) {\n\tlet timeoutID = null;\n\treturn (event) => {\n\t\tif (!timeoutID) {\n\t\t\ttimeoutID = setTimeout(() => {\n\t\t\t\tonClick(event);\n\t\t\t\ttimeoutID = null;\n\t\t\t}, delay);\n\t\t} else {\n\t\t\ttimeoutID = clearTimeout(timeoutID);\n\t\t\tonDoubleClick(event);\n\t\t}\n\t};\n}\n\nfunction getNumberOfGroupsAssignedForNumber(number, groups) {\n\treturn groups.reduce((accumulator, row) => accumulator + (row.get(number) > 0 ? 1 : 0), 0);\n}\n// eslint-disable-next-line react/no-multi-comp\nexport default class Index extends Component {\n\tstate = {};\n\n\tcomponentDidMount() {\n\t\t// eslint-disable-next-line no-undef\n\t\tif ('serviceWorker' in navigator) {\n\t\t\t// eslint-disable-next-line no-undef\n\t\t\tnavigator.serviceWorker\n\t\t\t\t.register('/service-worker.js')\n\t\t\t\t.then((reg) => {\n\t\t\t\t\tconsole.log('ServiceWorker scope: ', reg.scope);\n\t\t\t\t\tconsole.log('service worker registration successful');\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.warn('service worker registration failed', err.message);\n\t\t\t\t});\n\t\t}\n\t}\n\tgetSelectedCell() {\n\t\tconst { board } = this.state;\n\t\tconst selected = board.get('selected');\n\t\treturn selected && board.get('puzzle').getIn([selected.x, selected.y]);\n\t}\n\n\t// get the min between its completion in rows, columns and squares.\n\tgetNumberValueCount(number) {\n\t\tconst rows = this.state.board.getIn(['choices', 'rows']);\n\t\tconst columns = this.state.board.getIn(['choices', 'columns']);\n\t\tconst squares = this.state.board.getIn(['choices', 'squares']);\n\t\treturn Math.min(getNumberOfGroupsAssignedForNumber(number, squares), Math.min(getNumberOfGroupsAssignedForNumber(number, rows), getNumberOfGroupsAssignedForNumber(number, columns)));\n\t}\n\n\tgenerateGame = (finalCount = 20) => {\n\t\tconsole.log('generating');\n\t\t// get a filled puzzle generated\n\t\tconst solution = makePuzzle();\n\t\t// pluck values from cells to create the game\n\t\tconst { puzzle } = pluck(solution, finalCount);\n\t\t// initialize the board with choice counts\n\t\tconst board = makeBoard({ puzzle });\n\t\tthis.setState({\n\t\t\tboard,\n\t\t\thistory: List.of(board),\n\t\t\thistoryOffSet: 0,\n\t\t\tsolution,\n\t\t});\n\t};\n\n\taddNumberAsNote = (number) => {\n\t\tconst board = addNumberAsNote(this.state.board, this.getSelectedCell(), number);\n\t\tif (board) this.updateBoard(board);\n\t};\n\n\tupdateBoard = (newBoard) => {\n\t\tlet { history } = this.state;\n\t\tconst { historyOffSet } = this.state;\n\t\t// anything before current step is still in history\n\t\thistory = history.slice(0, historyOffSet + 1);\n\t\t// add itself onto the history\n\t\thistory = history.push(newBoard);\n\t\t// update the game\n\t\tthis.setState({ board: newBoard, history, historyOffSet: history.size - 1 });\n\t};\n\n\tcanUndo = () => this.state.historyOffSet > 0;\n\n\tredo = () => {\n\t\tconst { history } = this.state;\n\t\tlet { historyOffSet } = this.state;\n\t\tif (history.size) {\n\t\t\thistoryOffSet = Math.min(history.size - 1, historyOffSet + 1);\n\t\t\tconst board = history.get(historyOffSet);\n\t\t\tthis.setState({ board, historyOffSet });\n\t\t}\n\t};\n\n\tundo = () => {\n\t\tconst { history } = this.state;\n\t\tlet { historyOffSet, board } = this.state;\n\t\tif (history.size) {\n\t\t\thistoryOffSet = Math.max(0, historyOffSet - 1);\n\t\t\tboard = history.get(historyOffSet);\n\t\t\tthis.setState({ board, historyOffSet, history });\n\t\t}\n\t};\n\n\teraseSelected = () => {\n\t\tconst selectedCell = this.getSelectedCell();\n\t\tif (!selectedCell) return;\n\t\tthis.fillNumber(false);\n\t};\n\n\tfillSelectedWithSolution = () => {\n\t\tconst { board, solution } = this.state;\n\t\tconst selectedCell = this.getSelectedCell();\n\n\t\tthis.fillNumber(fillSelectedWithSolution(board, solution, selectedCell));\n\t};\n\n\t// fill currently selected cell with number\n\tfillNumber = (number) => {\n\t\tconst selectedCell = this.getSelectedCell();\n\n\t\tthis.updateBoard(fillNumber(this.state.board, selectedCell, number));\n\t};\n\n\trenderCell(cell, x, y) {\n\t\tconst { board } = this.state;\n\t\tconst selected = this.getSelectedCell();\n\t\tconst { value, prefilled, notes } = cell.toJSON();\n\t\tconst conflict = isConflict(this.state.board, x, y);\n\t\tconst peer = areCoordinatePeers({ x, y }, board.get('selected'));\n\t\tconst sameValue = !!(selected && selected.get('value') && value === selected.get('value'));\n\n\t\tconst isSelected = cell === selected;\n\t\treturn (\n\t\t\t<Cell\n\t\t\t\tprefilled={prefilled}\n\t\t\t\tnotes={notes}\n\t\t\t\tsameValue={sameValue}\n\t\t\t\tisSelected={isSelected}\n\t\t\t\tisPeer={peer}\n\t\t\t\tvalue={value}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tthis.setState({ board: selectCell(this.state.board, x, y) });\n\t\t\t\t}}\n\t\t\t\tkey={y}\n\t\t\t\tx={x}\n\t\t\t\ty={y}\n\t\t\t\tconflict={conflict}\n\t\t\t/>\n\t\t);\n\t}\n\n\trenderNumberControl() {\n\t\tconst selectedCell = this.getSelectedCell();\n\t\tconst prefilled = selectedCell && selectedCell.get('prefilled');\n\t\treturn (\n\t\t\t<div className=\"control\">\n\t\t\t\t{range(9).map((i) => {\n\t\t\t\t\tconst number = i + 1;\n\t\t\t\t\t// handles binding single click and double click callbacks\n\t\t\t\t\tconst clickHandle = getClickHandler(\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tthis.fillNumber(number);\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tthis.addNumberAsNote(number);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\treturn <NumberControl key={number} number={number} onClick={!prefilled ? clickHandle : undefined} completionPercentage={this.getNumberValueCount(number) / 9} />;\n\t\t\t\t})}\n\t\t\t\t<style jsx>{ControlStyle}</style>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trenderActions() {\n\t\tconst { history } = this.state;\n\t\tconst selectedCell = this.getSelectedCell();\n\t\tconst prefilled = selectedCell && selectedCell.get('prefilled');\n\t\treturn (\n\t\t\t<div className=\"actions\">\n\t\t\t\t<div className=\"action\" onClick={history.size ? this.undo : null}>\n\t\t\t\t\t<ReloadIcon />\n\t\t\t\t\tUndo\n\t\t\t\t</div>\n\t\t\t\t<div className=\"action redo\" onClick={history.size ? this.redo : null}>\n\t\t\t\t\t<ReloadIcon />\n\t\t\t\t\tRedo\n\t\t\t\t</div>\n\t\t\t\t<div className=\"action\" onClick={!prefilled ? this.eraseSelected : null}>\n\t\t\t\t\t<RemoveIcon />\n\t\t\t\t\tErase\n\t\t\t\t</div>\n\t\t\t\t<div className=\"action\" onClick={!prefilled ? this.fillSelectedWithSolution : null}>\n\t\t\t\t\t<LoupeIcon />\n\t\t\t\t\tHint\n\t\t\t\t</div>\n\t\t\t\t<style jsx>{ActionsStyle}</style>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trenderPuzzle() {\n\t\tconst { board } = this.state;\n\t\treturn (\n\t\t\t<div className=\"puzzle\">\n\t\t\t\t{board\n\t\t\t\t\t.get('puzzle')\n\t\t\t\t\t.map((row, i) => (\n\t\t\t\t\t\t// eslint-disable-next-line react/no-array-index-key\n\t\t\t\t\t\t<div key={i} className=\"row\">\n\t\t\t\t\t\t\t{row.map((cell, j) => this.renderCell(cell, i, j)).toArray()}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))\n\t\t\t\t\t.toArray()}\n\t\t\t\t<style jsx>{PuzzleStyle}</style>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trenderControls() {\n\t\treturn (\n\t\t\t<div className=\"controls\">\n\t\t\t\t{this.renderNumberControl()}\n\t\t\t\t{this.renderActions()}\n\t\t\t\t{/* language=CSS */}\n\t\t\t\t<style jsx>\n\t\t\t\t\t{`\n\t\t\t\t\t\t.controls {\n\t\t\t\t\t\t\tmargin-top: 0.3em;\n\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\tflex-wrap: wrap;\n\t\t\t\t\t\t\tjustify-content: center;\n\t\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\t\tpadding: 0.5em 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t`}\n\t\t\t\t</style>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trenderGenerationUI() {\n\t\treturn <GenerationUI generateGame={this.generateGame} />;\n\t}\n\n\trenderHeader() {\n\t\treturn (\n\t\t\t<div className=\"header\">\n\t\t\t\t<div className=\"new-game\" onClick={() => this.setState({ board: false })}>\n\t\t\t\t\t<ReturnIcon />\n\t\t\t\t\t<div>New Game</div>\n\t\t\t\t</div>\n\t\t\t\t<Tip />\n\t\t\t\t{/* language=CSS */}\n\t\t\t\t<style jsx>\n\t\t\t\t\t{`\n\t\t\t\t\t\t.header {\n\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\t\t\tmax-width: 500px;\n\t\t\t\t\t\t\tpadding: 0 0.5em;\n\t\t\t\t\t\t\tbox-sizing: border-box;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.new-game {\n\t\t\t\t\t\t\tcursor: pointer;\n\t\t\t\t\t\t\tmargin-top: 0.2em;\n\t\t\t\t\t\t\tdisplay: inline-flex;\n\t\t\t\t\t\t\tjustify-content: center;\n\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\tpadding: 0.2em 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.new-game :global(svg) {\n\t\t\t\t\t\t\theight: 1em;\n\t\t\t\t\t\t\tmargin-bottom: 0.3em;\n\t\t\t\t\t\t}\n\t\t\t\t\t`}\n\t\t\t\t</style>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst { board } = this.state;\n\t\treturn (\n\t\t\t<div className=\"body\">\n\t\t\t\t<NextHead>\n\t\t\t\t\t<title>Sudoku Evolved</title>\n\t\t\t\t\t<meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\n\t\t\t\t\t<meta name=\"description\" content={Description} />\n\t\t\t\t\t<link href=\"https://fonts.googleapis.com/css?family=Special+Elite\" rel=\"stylesheet\" />\n\t\t\t\t\t<meta property=\"og:url\" content=\"https://sudoku.sitianliu.com/\" />\n\t\t\t\t\t<meta property=\"og:title\" content=\"Sudoku Evolved\" />\n\t\t\t\t\t<meta property=\"og:type\" content=\"website\" />\n\t\t\t\t\t<meta property=\"og:description\" content={Description} />\n\t\t\t\t\t<meta property=\"og:image\" content=\"https://sudoku.sitianliu.com/static/og-image.png\" />\n\t\t\t\t</NextHead>\n\t\t\t\t{!board && this.renderGenerationUI()}\n\t\t\t\t{board && this.renderHeader()}\n\t\t\t\t{board && this.renderPuzzle()}\n\t\t\t\t{board && this.renderControls()}\n\t\t\t\t<div className=\"rooter\">\n\t\t\t\t\tMade with <span>❤️</span>️ By <a href=\"https://www.sitianliu.com/\">Sitian Liu</a> | <a href=\"https://medium.com/@sitianliu_57680/building-a-sudoku-game-in-react-ca663915712\">Blog Post</a>\n\t\t\t\t</div>\n\t\t\t\t{/* language=CSS */}\n\t\t\t\t<style jsx>\n\t\t\t\t\t{`\n\t\t\t\t\t\t:global(body),\n\t\t\t\t\t\t.body {\n\t\t\t\t\t\t\tfont-family: 'Special Elite', cursive;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.body {\n\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\tflex-direction: column;\n\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\tjustify-content: center;\n\t\t\t\t\t\t\theight: 100vh;\n\t\t\t\t\t\t\twidth: 100vw;\n\t\t\t\t\t\t\tposition: relative;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@media (min-width: 800px) and (min-height: 930px) {\n\t\t\t\t\t\t\t:global(.header, .puzzle, .controls) {\n\t\t\t\t\t\t\t\tfont-size: 1.5em;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@media (max-width: 800px) and (min-width: 600px) {\n\t\t\t\t\t\t\t:global(.header, .puzzle, .controls) {\n\t\t\t\t\t\t\t\tfont-size: 1.2em;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@media (max-height: 930px) and (min-height: 800px) and (min-width: 600px) {\n\t\t\t\t\t\t\t:global(.header, .puzzle, .controls) {\n\t\t\t\t\t\t\t\tfont-size: 1.2em;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@media (max-height: 800px) and (min-height: 600px) and (min-width: 370px) {\n\t\t\t\t\t\t\t:global(.header, .puzzle, .controls) {\n\t\t\t\t\t\t\t\tfont-size: 1em;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@media (max-width: 370px) {\n\t\t\t\t\t\t\t:global(.header, .puzzle, .controls) {\n\t\t\t\t\t\t\t\tfont-size: 0.8em;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@media (max-height: 600px) {\n\t\t\t\t\t\t\t:global(.header, .puzzle, .controls) {\n\t\t\t\t\t\t\t\tfont-size: 0.8em;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t:global(body) {\n\t\t\t\t\t\t\tmargin: 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.rooter {\n\t\t\t\t\t\t\tposition: fixed;\n\t\t\t\t\t\t\tbottom: 0;\n\t\t\t\t\t\t\tfont-size: 0.8em;\n\t\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\t}\n\t\t\t\t\t`}\n\t\t\t\t</style>\n\t\t\t\t<style jsx global>\n\t\t\t\t\t{RangeStyle}\n\t\t\t\t</style>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./pages/index.js"],"sourceRoot":""}