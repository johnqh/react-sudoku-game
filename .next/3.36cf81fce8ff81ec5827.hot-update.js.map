{"version":3,"sources":["webpack:///./pages/index.js?f7ee"],"names":["LoupeIcon","RemoveIcon","ReloadIcon","ReturnIcon","Description","cellWidth","LightBlue100","LightBlue200","LightBlue300","Indigo700","DeepOrange200","DeepOrange600","ControlNumberColor","CellStyle","ActionsStyle","ControlStyle","NumberControlStyle","PuzzleStyle","CirculuarProgressStyle","CircularPathD","getBackGroundColor","conflict","isPeer","sameValue","isSelected","getFontColor","value","prefilled","GenerationUI","props","generateGame","state","Color","darken","hsl","string","lighten","setState","propTypes","PropTypes","func","isRequired","NumberControl","number","onClick","completionPercentage","defaultProps","Cell","notes","backgroundColor","fontColor","range","map","i","has","bool","instanceOf","CirclularProgress","percent","getClickHandler","onDoubleClick","delay","timeoutID","event","setTimeout","clearTimeout","makeCountObject","countObj","push","makeBoard","puzzle","rows","Array","from","keys","columns","squares","result","row","cell","j","Math","floor","fromJS","selected","choices","updateBoardWithNumber","x","y","fill","board","get","getIn","delete","set","increment","rowPath","columnPath","squarePath","setIn","getNumberOfGroupsAssignedForNumber","groups","reduce","accumulator","Index","finalCount","solution","makePuzzle","pluck","history","List","of","historyOffSet","addNumberAsNote","selectedCell","getSelectedCell","currentValue","Set","add","updateBoard","newBoard","slice","size","canUndo","redo","min","undo","max","eraseSelected","fillNumber","fillSelectedWithSolution","setNumber","selectCell","navigator","serviceWorker","register","then","reg","console","log","scope","catch","err","warn","message","toJSON","rowConflict","columnConflict","squareConflict","isConflict","peer","areCoordinatePeers","clickHandle","undefined","getNumberValueCount","renderCell","toArray","renderNumberControl","renderActions","renderGenerationUI","renderHeader","renderPuzzle","renderControls"],"mappings":"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","file":"3.36cf81fce8ff81ec5827.hot-update.js","sourcesContent":["/* eslint-disable max-len */\n/* eslint-disable react/jsx-indent-props */\n/* eslint-disable no-mixed-operators */\n/* eslint-disable no-mixed-spaces-and-tabs */\n/* eslint-disable arrow-parens */\n/* eslint-disable react/jsx-indent */\n/* eslint-disable object-curly-newline */\n/* eslint-disable indent */\n/* eslint-disable no-tabs */\n/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { Component } from 'react';\nimport { Set, List, fromJS } from 'immutable';\nimport PropTypes from 'prop-types';\nimport NextHead from 'next/head';\nimport Color from 'color';\nimport InputRange from 'react-input-range';\n\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport css from 'styled-jsx/css';\n\nimport RangeStyle from '../input-range-style';\nimport LoupeIcon from '../svg/loupe.svg';\nimport RemoveIcon from '../svg/remove.svg';\nimport ReloadIcon from '../svg/reload.svg';\nimport ReturnIcon from '../svg/return.svg';\n\nimport { makePuzzle, pluck, isPeer as areCoordinatePeers, range } from '../sudoku';\nimport { backGroundBlue } from '../colors';\nimport Tip from '../components/tool-tip';\n\nconst Description = 'Discover the next evolution of Sudoku with amazing graphics, animations, and user-friendly features. Enjoy a Sudoku experience like you never have before with customizable game generation, cell highlighting, intuitive controls and more!';\nconst cellWidth = 2.5;\n\nconst LightBlue100 = '#B3E5FC';\nconst LightBlue200 = '#81D4FA';\nconst LightBlue300 = '#4FC3F7';\nconst Indigo700 = '#303F9F';\nconst DeepOrange200 = '#FFAB91';\nconst DeepOrange600 = '#F4511E';\nconst ControlNumberColor = Indigo700;\n\n// eslint-disable-next-line no-lone-blocks\n{\n\t/* language=CSS */\n}\nconst CellStyle = css`\n\t.cell {\n\t\theight: ${cellWidth}em;\n\t\twidth: ${cellWidth}em;\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tfont-size: 1.1em;\n\t\tfont-weight: bold;\n\t\ttransition: background-color 0.3s ease-in-out;\n\t}\n\t.cell:nth-child(3n + 3):not(:last-child) {\n\t\tborder-right: 2px solid black;\n\t}\n\t.cell:not(:last-child) {\n\t\tborder-right: 1px solid black;\n\t}\n\t.note-number {\n\t\tfont-size: 0.6em;\n\t\twidth: 33%;\n\t\theight: 33%;\n\t\tbox-sizing: border-box;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t}\n`;\n\n// eslint-disable-next-line no-lone-blocks\n{\n\t/* language=CSS */\n}\nconst ActionsStyle = css`\n\t.actions {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: space-between;\n\t\twidth: 100%;\n\t\tmax-width: 400px;\n\t\tmargin-top: 0.5em;\n\t\tpadding: 0 0.6em;\n\t}\n\t.action {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tflex-direction: column;\n\t}\n\t.action :global(svg) {\n\t\twidth: 2.5em;\n\t\tmargin-bottom: 0.2em;\n\t}\n\t.redo :global(svg) {\n\t\ttransform: scaleX(-1);\n\t}\n`;\n\n// eslint-disable-next-line no-lone-blocks\n{\n\t/* language=CSS */\n}\nconst ControlStyle = css`\n\t.control {\n\t\tpadding: 0 2em;\n\t\tcursor: pointer;\n\t\tdisplay: inline-flex;\n\t\talign-items: center;\n\t\tflex-wrap: wrap;\n\t\tjustify-content: center;\n\t\tfont-family: 'Special Elite', cursive;\n\t\ttransition: filter 0.5s ease-in-out;\n\t\twidth: 100%;\n\t}\n`;\n\n// eslint-disable-next-line no-lone-blocks\n{\n\t/* language=CSS */\n}\nconst NumberControlStyle = css`\n\t.number {\n\t\tdisplay: flex;\n\t\tposition: relative;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tfont-size: 2em;\n\t\tmargin: 0.1em;\n\t\twidth: 1.5em;\n\t\theight: 1.5em;\n\t\tcolor: ${ControlNumberColor};\n\t\tbox-shadow: 0 1px 2px rgba(0, 0, 0, 0.16), 0 1px 2px rgba(0, 0, 0, 0.23);\n\t\tborder-radius: 50%;\n\t}\n\t.number > div {\n\t\tmargin-top: 0.3em;\n\t}\n`;\n\n// eslint-disable-next-line no-lone-blocks\n{\n\t/* language=CSS */\n}\nconst PuzzleStyle = css`\n\t.puzzle {\n\t\tmargin-top: 0.5em;\n\t\twidth: ${cellWidth * 9}em;\n\t\tcursor: pointer;\n\t\tbox-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n\t}\n\t.row {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tflex: 0;\n\t\twidth: ${cellWidth * 9}em;\n\t}\n\t.row:not(:last-child) {\n\t\tborder-bottom: 1px solid black;\n\t}\n\t.row:nth-child(3n + 3):not(:last-child) {\n\t\tborder-bottom: 2px solid black !important;\n\t}\n`;\n\n// eslint-disable-next-line no-lone-blocks\n{\n\t/* language=CSS */\n}\nconst CirculuarProgressStyle = css`\n\t.circular-progress {\n\t\tdisplay: block;\n\t\twidth: 100%;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\ttransition: filter 0.4s ease-in-out;\n\t}\n\n\t.circle-bg {\n\t\tfill: none;\n\t\tstroke: #eee;\n\t\tstroke-width: 3.8;\n\t}\n\n\t.circle {\n\t\tstroke: ${ControlNumberColor};\n\t\ttransition: stroke-dasharray 0.4s ease-in-out;\n\t\tfill: none;\n\t\tstroke-width: 2.8;\n\t\tstroke-linecap: round;\n\t}\n`;\n\nconst CircularPathD = 'M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831';\n\nfunction getBackGroundColor({ conflict, isPeer, sameValue, isSelected }) {\n\tif (conflict && isPeer && sameValue) {\n\t\treturn DeepOrange200;\n\t} else if (sameValue) {\n\t\treturn LightBlue300;\n\t} else if (isSelected) {\n\t\treturn LightBlue200;\n\t} else if (isPeer) {\n\t\treturn LightBlue100;\n\t}\n\treturn false;\n}\n\nfunction getFontColor({ value, conflict, prefilled }) {\n\tif (conflict && !prefilled) {\n\t\treturn DeepOrange600;\n\t} else if (!prefilled && value) {\n\t\treturn ControlNumberColor;\n\t}\n\treturn false;\n}\n\nclass GenerationUI extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = { value: 30 };\n\t}\n\n\tgenerateGame = () => {\n\t\tthis.props.generateGame(this.state.value);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"generation\">\n\t\t\t\t<div className=\"copy\">Start with {this.state.value} cells prefilled</div>\n\t\t\t\t<InputRange maxValue={81} minValue={17} value={this.state.value} onChange={(value) => this.setState({ value })} />\n\t\t\t\t<div className=\"button\" onClick={this.generateGame}>\n\t\t\t\t\tPlay Sudoku\n\t\t\t\t</div>\n\t\t\t\t{/* language=CSS */}\n\t\t\t\t<style jsx>\n\t\t\t\t\t{`\n\t\t\t\t\t\t.copy {\n\t\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\t\tfont-size: 1.3em;\n\t\t\t\t\t\t\tmargin-bottom: 0.5em;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.generation {\n\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\tjustify-content: center;\n\t\t\t\t\t\t\tflex-direction: column;\n\t\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t:global(.input-range) {\n\t\t\t\t\t\t\twidth: 80%;\n\t\t\t\t\t\t\tmax-width: 500px;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.button {\n\t\t\t\t\t\t\tmargin-top: 0.5em;\n\t\t\t\t\t\t\tborder-radius: 0.25em;\n\t\t\t\t\t\t\tcursor: pointer;\n\t\t\t\t\t\t\tfont-weight: bold;\n\t\t\t\t\t\t\ttext-decoration: none;\n\t\t\t\t\t\t\tcolor: #fff;\n\t\t\t\t\t\t\tposition: relative;\n\t\t\t\t\t\t\tdisplay: inline-block;\n\t\t\t\t\t\t\ttransition: all 0.25s;\n\t\t\t\t\t\t\tpadding: 5px 10px;\n\t\t\t\t\t\t\tfont-size: 1.4em;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.button:active {\n\t\t\t\t\t\t\ttransform: translate(0px, 5px);\n\t\t\t\t\t\t\tbox-shadow: 0 1px 0 0;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t.button {\n\t\t\t\t\t\t\tbackground-color: ${backGroundBlue};\n\t\t\t\t\t\t\tbox-shadow: 0 2px 4px 0 ${Color(backGroundBlue).darken(0.5).hsl().string()};\n\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t.button:hover {\n\t\t\t\t\t\t\tbackground-color: ${Color(backGroundBlue).lighten(0.2).hsl().string()};\n\t\t\t\t\t\t}\n\t\t\t\t\t`}\n\t\t\t\t</style>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nGenerationUI.propTypes = {\n\tgenerateGame: PropTypes.func.isRequired,\n};\n\nconst NumberControl = ({ number, onClick, completionPercentage }) => (\n\t<div key={number} className=\"number\" onClick={onClick}>\n\t\t<div>{number}</div>\n\t\t<CirclularProgress percent={completionPercentage} />\n\t\t<style jsx>{NumberControlStyle}</style>\n\t</div>\n);\n\nNumberControl.propTypes = {\n\tnumber: PropTypes.number.isRequired,\n\tonClick: PropTypes.func,\n\tcompletionPercentage: PropTypes.number.isRequired,\n};\n\nNumberControl.defaultProps = {\n\tonClick: null,\n};\n\nconst Cell = (props) => {\n\tconst { value, onClick, isPeer, isSelected, sameValue, prefilled, notes, conflict } = props;\n\tconst backgroundColor = getBackGroundColor({\n\t\tconflict,\n\t\tisPeer,\n\t\tsameValue,\n\t\tisSelected,\n\t});\n\tconst fontColor = getFontColor({ conflict, prefilled, value });\n\treturn (\n\t\t<div className=\"cell\" onClick={onClick}>\n\t\t\t{notes\n\t\t\t\t? range(9).map((i) => (\n\t\t\t\t\t\t<div key={i} className=\"note-number\">\n\t\t\t\t\t\t\t{notes.has(i + 1) && i + 1}\n\t\t\t\t\t\t</div>\n\t\t\t\t  ))\n\t\t\t\t: value && value}\n\t\t\t{/* language=CSS */}\n\t\t\t<style jsx>{CellStyle}</style>\n\t\t\t<style jsx>\n\t\t\t\t{`\n\t\t\t\t\t.cell {\n\t\t\t\t\t\tbackground-color: ${backgroundColor || 'initial'};\n\t\t\t\t\t\tcolor: ${fontColor || 'initial'};\n\t\t\t\t\t}\n\t\t\t\t`}\n\t\t\t</style>\n\t\t</div>\n\t);\n};\n\nCell.propTypes = {\n\t// current number value\n\tvalue: PropTypes.number,\n\t// cell click handler\n\tonClick: PropTypes.func.isRequired,\n\t// if the cell is a peer of the selected cell\n\tisPeer: PropTypes.bool.isRequired,\n\t// if the cell is selected by the user\n\tisSelected: PropTypes.bool.isRequired,\n\t// current cell has the same value if the user selected cell\n\tsameValue: PropTypes.bool.isRequired,\n\t// if this was prefilled as a part of the puzzle\n\tprefilled: PropTypes.bool.isRequired,\n\t// current notes taken on the cell\n\tnotes: PropTypes.instanceOf(Set),\n\t// if the current cell does not satisfy the game constraint\n\tconflict: PropTypes.bool.isRequired,\n};\n\nCell.defaultProps = {\n\tnotes: null,\n\tvalue: null,\n};\n\nconst CirclularProgress = ({ percent }) => (\n\t<svg viewBox=\"0 0 36 36\" className=\"circular-progress\">\n\t\t<path className=\"circle-bg\" d={CircularPathD} />\n\t\t<path className=\"circle\" strokeDasharray={`${percent * 100}, 100`} d={CircularPathD} />\n\t\t{/* language=CSS */}\n\t\t<style jsx>{CirculuarProgressStyle}</style>\n\t</svg>\n);\n\nCirclularProgress.propTypes = {\n\tpercent: PropTypes.number.isRequired,\n};\n\nfunction getClickHandler(onClick, onDoubleClick, delay = 250) {\n\tlet timeoutID = null;\n\treturn (event) => {\n\t\tif (!timeoutID) {\n\t\t\ttimeoutID = setTimeout(() => {\n\t\t\t\tonClick(event);\n\t\t\t\ttimeoutID = null;\n\t\t\t}, delay);\n\t\t} else {\n\t\t\ttimeoutID = clearTimeout(timeoutID);\n\t\t\tonDoubleClick(event);\n\t\t}\n\t};\n}\n\n/**\n * make size 9 array of 0s\n * @returns {Array}\n */\nfunction makeCountObject() {\n\tconst countObj = [];\n\tfor (let i = 0; i < 10; i += 1) countObj.push(0);\n\treturn countObj;\n}\n\n/**\n * given a 2D array of numbers as the initial puzzle, generate the initial game state\n * @param puzzle\n * @returns {any}\n */\nfunction makeBoard({ puzzle }) {\n\t// create initial count object to keep track of conflicts per number value\n\tconst rows = Array.from(Array(9).keys()).map(() => makeCountObject());\n\tconst columns = Array.from(Array(9).keys()).map(() => makeCountObject());\n\tconst squares = Array.from(Array(9).keys()).map(() => makeCountObject());\n\tconst result = puzzle.map((row, i) =>\n\t\trow.map((cell, j) => {\n\t\t\tif (cell) {\n\t\t\t\trows[i][cell] += 1;\n\t\t\t\tcolumns[j][cell] += 1;\n\t\t\t\tsquares[Math.floor(i / 3) * 3 + Math.floor(j / 3)][cell] += 1;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tvalue: puzzle[i][j] > 0 ? puzzle[i][j] : null,\n\t\t\t\tprefilled: !!puzzle[i][j],\n\t\t\t};\n\t\t})\n\t);\n\treturn fromJS({ puzzle: result, selected: false, choices: { rows, columns, squares } });\n}\n\n/**\n * give the coordinate update the current board with a number choice\n * @param x\n * @param y\n * @param number\n * @param fill whether to set or unset\n * @param board the immutable board given to change\n */\nfunction updateBoardWithNumber({ x, y, number, fill = true, board }) {\n\tlet cell = board.get('puzzle').getIn([x, y]);\n\t// delete its notes\n\tcell = cell.delete('notes');\n\t// set or unset its value depending on `fill`\n\tcell = fill ? cell.set('value', number) : cell.delete('value');\n\tconst increment = fill ? 1 : -1;\n\t// update the current group choices\n\tconst rowPath = ['choices', 'rows', x, number];\n\tconst columnPath = ['choices', 'columns', y, number];\n\tconst squarePath = ['choices', 'squares', Math.floor(x / 3) * 3 + Math.floor(y / 3), number];\n\treturn board\n\t\t.setIn(rowPath, board.getIn(rowPath) + increment)\n\t\t.setIn(columnPath, board.getIn(columnPath) + increment)\n\t\t.setIn(squarePath, board.getIn(squarePath) + increment)\n\t\t.setIn(['puzzle', x, y], cell);\n}\n\nfunction getNumberOfGroupsAssignedForNumber(number, groups) {\n\treturn groups.reduce((accumulator, row) => accumulator + (row.get(number) > 0 ? 1 : 0), 0);\n}\n// eslint-disable-next-line react/no-multi-comp\nexport default class Index extends Component {\n\tstate = {};\n\n\tcomponentDidMount() {\n\t\t// eslint-disable-next-line no-undef\n\t\tif ('serviceWorker' in navigator) {\n\t\t\t// eslint-disable-next-line no-undef\n\t\t\tnavigator.serviceWorker\n\t\t\t\t.register('/service-worker.js')\n\t\t\t\t.then((reg) => {\n\t\t\t\t\tconsole.log('ServiceWorker scope: ', reg.scope);\n\t\t\t\t\tconsole.log('service worker registration successful');\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.warn('service worker registration failed', err.message);\n\t\t\t\t});\n\t\t}\n\t}\n\tgetSelectedCell() {\n\t\tconst { board } = this.state;\n\t\tconst selected = board.get('selected');\n\t\treturn selected && board.get('puzzle').getIn([selected.x, selected.y]);\n\t}\n\n\t// get the min between its completion in rows, columns and squares.\n\tgetNumberValueCount(number) {\n\t\tconst rows = this.state.board.getIn(['choices', 'rows']);\n\t\tconst columns = this.state.board.getIn(['choices', 'columns']);\n\t\tconst squares = this.state.board.getIn(['choices', 'squares']);\n\t\treturn Math.min(getNumberOfGroupsAssignedForNumber(number, squares), Math.min(getNumberOfGroupsAssignedForNumber(number, rows), getNumberOfGroupsAssignedForNumber(number, columns)));\n\t}\n\n\tgenerateGame = (finalCount = 20) => {\n\t\t// get a filled puzzle generated\n\t\tconst solution = makePuzzle();\n\t\t// pluck values from cells to create the game\n\t\tconst { puzzle } = pluck(solution, finalCount);\n\t\t// initialize the board with choice counts\n\t\tconst board = makeBoard({ puzzle });\n\t\tthis.setState({\n\t\t\tboard,\n\t\t\thistory: List.of(board),\n\t\t\thistoryOffSet: 0,\n\t\t\tsolution,\n\t\t});\n\t};\n\n\taddNumberAsNote = (number) => {\n\t\tlet { board } = this.state;\n\t\tlet selectedCell = this.getSelectedCell();\n\t\tif (!selectedCell) return;\n\t\tconst prefilled = selectedCell.get('prefilled');\n\t\tif (prefilled) return;\n\t\tconst { x, y } = board.get('selected');\n\t\tconst currentValue = selectedCell.get('value');\n\t\tif (currentValue) {\n\t\t\tboard = updateBoardWithNumber({\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t\tnumber: currentValue,\n\t\t\t\tfill: false,\n\t\t\t\tboard: this.state.board,\n\t\t\t});\n\t\t}\n\t\tlet notes = selectedCell.get('notes') || Set();\n\t\tif (notes.has(number)) {\n\t\t\tnotes = notes.delete(number);\n\t\t} else {\n\t\t\tnotes = notes.add(number);\n\t\t}\n\t\tselectedCell = selectedCell.set('notes', notes);\n\t\tselectedCell = selectedCell.delete('value');\n\t\tboard = board.setIn(['puzzle', x, y], selectedCell);\n\t\tthis.updateBoard(board);\n\t};\n\n\tupdateBoard = (newBoard) => {\n\t\tlet { history } = this.state;\n\t\tconst { historyOffSet } = this.state;\n\t\t// anything before current step is still in history\n\t\thistory = history.slice(0, historyOffSet + 1);\n\t\t// add itself onto the history\n\t\thistory = history.push(newBoard);\n\t\t// update the game\n\t\tthis.setState({ board: newBoard, history, historyOffSet: history.size - 1 });\n\t};\n\n\tcanUndo = () => this.state.historyOffSet > 0;\n\n\tredo = () => {\n\t\tconst { history } = this.state;\n\t\tlet { historyOffSet } = this.state;\n\t\tif (history.size) {\n\t\t\thistoryOffSet = Math.min(history.size - 1, historyOffSet + 1);\n\t\t\tconst board = history.get(historyOffSet);\n\t\t\tthis.setState({ board, historyOffSet });\n\t\t}\n\t};\n\n\tundo = () => {\n\t\tconst { history } = this.state;\n\t\tlet { historyOffSet, board } = this.state;\n\t\tif (history.size) {\n\t\t\thistoryOffSet = Math.max(0, historyOffSet - 1);\n\t\t\tboard = history.get(historyOffSet);\n\t\t\tthis.setState({ board, historyOffSet, history });\n\t\t}\n\t};\n\n\teraseSelected = () => {\n\t\tconst selectedCell = this.getSelectedCell();\n\t\tif (!selectedCell) return;\n\t\tthis.fillNumber(false);\n\t};\n\n\tfillSelectedWithSolution = () => {\n\t\tconst { board, solution } = this.state;\n\t\tconst selectedCell = this.getSelectedCell();\n\t\tif (!selectedCell) return;\n\t\tconst { x, y } = board.get('selected');\n\t\tthis.fillNumber(solution[x][y]);\n\t};\n\n\t// fill currently selected cell with number\n\tfillNumber = (number) => {\n\t\tlet { board } = this.state;\n\t\tconst selectedCell = this.getSelectedCell();\n\t\t// no-op if nothing is selected\n\t\tif (!selectedCell) return;\n\t\tconst prefilled = selectedCell.get('prefilled');\n\t\t// no-op if it is refilled\n\t\tif (prefilled) return;\n\t\tconst { x, y } = board.get('selected');\n\t\tconst currentValue = selectedCell.get('value');\n\t\t// remove the current value and update the game state\n\t\tif (currentValue) {\n\t\t\tboard = updateBoardWithNumber({\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t\tnumber: currentValue,\n\t\t\t\tfill: false,\n\t\t\t\tboard: this.state.board,\n\t\t\t});\n\t\t}\n\t\t// update to new number if any\n\t\tconst setNumber = currentValue !== number && number;\n\t\tif (setNumber) {\n\t\t\tboard = updateBoardWithNumber({\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t\tnumber,\n\t\t\t\tfill: true,\n\t\t\t\tboard,\n\t\t\t});\n\t\t}\n\t\tthis.updateBoard(board);\n\t};\n\n\tselectCell = (x, y) => {\n\t\tlet { board } = this.state;\n\t\tboard = board.set('selected', { x, y });\n\t\tthis.setState({ board });\n\t};\n\n\tisConflict(i, j) {\n\t\tconst { value } = this.state.board.getIn(['puzzle', i, j]).toJSON();\n\t\tif (!value) return false;\n\t\tconst rowConflict = this.state.board.getIn(['choices', 'rows', i, value]) > 1;\n\t\tconst columnConflict = this.state.board.getIn(['choices', 'columns', j, value]) > 1;\n\t\tconst squareConflict = this.state.board.getIn(['choices', 'squares', Math.floor(i / 3) * 3 + Math.floor(j / 3), value]) > 1;\n\t\treturn rowConflict || columnConflict || squareConflict;\n\t}\n\n\trenderCell(cell, x, y) {\n\t\tconst { board } = this.state;\n\t\tconst selected = this.getSelectedCell();\n\t\tconst { value, prefilled, notes } = cell.toJSON();\n\t\tconst conflict = this.isConflict(x, y);\n\t\tconst peer = areCoordinatePeers({ x, y }, board.get('selected'));\n\t\tconst sameValue = !!(selected && selected.get('value') && value === selected.get('value'));\n\n\t\tconst isSelected = cell === selected;\n\t\treturn (\n\t\t\t<Cell\n\t\t\t\tprefilled={prefilled}\n\t\t\t\tnotes={notes}\n\t\t\t\tsameValue={sameValue}\n\t\t\t\tisSelected={isSelected}\n\t\t\t\tisPeer={peer}\n\t\t\t\tvalue={value}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tthis.selectCell(x, y);\n\t\t\t\t}}\n\t\t\t\tkey={y}\n\t\t\t\tx={x}\n\t\t\t\ty={y}\n\t\t\t\tconflict={conflict}\n\t\t\t/>\n\t\t);\n\t}\n\n\trenderNumberControl() {\n\t\tconst selectedCell = this.getSelectedCell();\n\t\tconst prefilled = selectedCell && selectedCell.get('prefilled');\n\t\treturn (\n\t\t\t<div className=\"control\">\n\t\t\t\t{range(9).map((i) => {\n\t\t\t\t\tconst number = i + 1;\n\t\t\t\t\t// handles binding single click and double click callbacks\n\t\t\t\t\tconst clickHandle = getClickHandler(\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tthis.fillNumber(number);\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tthis.addNumberAsNote(number);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\treturn <NumberControl key={number} number={number} onClick={!prefilled ? clickHandle : undefined} completionPercentage={this.getNumberValueCount(number) / 9} />;\n\t\t\t\t})}\n\t\t\t\t<style jsx>{ControlStyle}</style>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trenderActions() {\n\t\tconst { history } = this.state;\n\t\tconst selectedCell = this.getSelectedCell();\n\t\tconst prefilled = selectedCell && selectedCell.get('prefilled');\n\t\treturn (\n\t\t\t<div className=\"actions\">\n\t\t\t\t<div className=\"action\" onClick={history.size ? this.undo : null}>\n\t\t\t\t\t<ReloadIcon />\n\t\t\t\t\tUndo\n\t\t\t\t</div>\n\t\t\t\t<div className=\"action redo\" onClick={history.size ? this.redo : null}>\n\t\t\t\t\t<ReloadIcon />\n\t\t\t\t\tRedo\n\t\t\t\t</div>\n\t\t\t\t<div className=\"action\" onClick={!prefilled ? this.eraseSelected : null}>\n\t\t\t\t\t<RemoveIcon />\n\t\t\t\t\tErase\n\t\t\t\t</div>\n\t\t\t\t<div className=\"action\" onClick={!prefilled ? this.fillSelectedWithSolution : null}>\n\t\t\t\t\t<LoupeIcon />\n\t\t\t\t\tHint\n\t\t\t\t</div>\n\t\t\t\t<style jsx>{ActionsStyle}</style>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trenderPuzzle() {\n\t\tconst { board } = this.state;\n\t\treturn (\n\t\t\t<div className=\"puzzle\">\n\t\t\t\t{board\n\t\t\t\t\t.get('puzzle')\n\t\t\t\t\t.map((row, i) => (\n\t\t\t\t\t\t// eslint-disable-next-line react/no-array-index-key\n\t\t\t\t\t\t<div key={i} className=\"row\">\n\t\t\t\t\t\t\t{row.map((cell, j) => this.renderCell(cell, i, j)).toArray()}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))\n\t\t\t\t\t.toArray()}\n\t\t\t\t<style jsx>{PuzzleStyle}</style>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trenderControls() {\n\t\treturn (\n\t\t\t<div className=\"controls\">\n\t\t\t\t{this.renderNumberControl()}\n\t\t\t\t{this.renderActions()}\n\t\t\t\t{/* language=CSS */}\n\t\t\t\t<style jsx>\n\t\t\t\t\t{`\n\t\t\t\t\t\t.controls {\n\t\t\t\t\t\t\tmargin-top: 0.3em;\n\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\tflex-wrap: wrap;\n\t\t\t\t\t\t\tjustify-content: center;\n\t\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\t\tpadding: 0.5em 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t`}\n\t\t\t\t</style>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trenderGenerationUI() {\n\t\treturn <GenerationUI generateGame={this.generateGame} />;\n\t}\n\n\trenderHeader() {\n\t\treturn (\n\t\t\t<div className=\"header\">\n\t\t\t\t<div className=\"new-game\" onClick={() => this.setState({ board: false })}>\n\t\t\t\t\t<ReturnIcon />\n\t\t\t\t\t<div>New Game</div>\n\t\t\t\t</div>\n\t\t\t\t<Tip />\n\t\t\t\t{/* language=CSS */}\n\t\t\t\t<style jsx>\n\t\t\t\t\t{`\n\t\t\t\t\t\t.header {\n\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\t\t\tmax-width: 500px;\n\t\t\t\t\t\t\tpadding: 0 0.5em;\n\t\t\t\t\t\t\tbox-sizing: border-box;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.new-game {\n\t\t\t\t\t\t\tcursor: pointer;\n\t\t\t\t\t\t\tmargin-top: 0.2em;\n\t\t\t\t\t\t\tdisplay: inline-flex;\n\t\t\t\t\t\t\tjustify-content: center;\n\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\tpadding: 0.2em 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.new-game :global(svg) {\n\t\t\t\t\t\t\theight: 1em;\n\t\t\t\t\t\t\tmargin-bottom: 0.3em;\n\t\t\t\t\t\t}\n\t\t\t\t\t`}\n\t\t\t\t</style>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst { board } = this.state;\n\t\treturn (\n\t\t\t<div className=\"body\">\n\t\t\t\t<NextHead>\n\t\t\t\t\t<title>Sudoku Evolved</title>\n\t\t\t\t\t<meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\n\t\t\t\t\t<meta name=\"description\" content={Description} />\n\t\t\t\t\t<link href=\"https://fonts.googleapis.com/css?family=Special+Elite\" rel=\"stylesheet\" />\n\t\t\t\t\t<meta property=\"og:url\" content=\"https://sudoku.sitianliu.com/\" />\n\t\t\t\t\t<meta property=\"og:title\" content=\"Sudoku Evolved\" />\n\t\t\t\t\t<meta property=\"og:type\" content=\"website\" />\n\t\t\t\t\t<meta property=\"og:description\" content={Description} />\n\t\t\t\t\t<meta property=\"og:image\" content=\"https://sudoku.sitianliu.com/static/og-image.png\" />\n\t\t\t\t</NextHead>\n\t\t\t\t{!board && this.renderGenerationUI()}\n\t\t\t\t{board && this.renderHeader()}\n\t\t\t\t{board && this.renderPuzzle()}\n\t\t\t\t{board && this.renderControls()}\n\t\t\t\t<div className=\"rooter\">\n\t\t\t\t\tMade with <span>❤️</span>️ By <a href=\"https://www.sitianliu.com/\">Sitian Liu</a> | <a href=\"https://medium.com/@sitianliu_57680/building-a-sudoku-game-in-react-ca663915712\">Blog Post</a>\n\t\t\t\t</div>\n\t\t\t\t{/* language=CSS */}\n\t\t\t\t<style jsx>\n\t\t\t\t\t{`\n\t\t\t\t\t\t:global(body),\n\t\t\t\t\t\t.body {\n\t\t\t\t\t\t\tfont-family: 'Special Elite', cursive;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.body {\n\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\tflex-direction: column;\n\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\tjustify-content: center;\n\t\t\t\t\t\t\theight: 100vh;\n\t\t\t\t\t\t\twidth: 100vw;\n\t\t\t\t\t\t\tposition: relative;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@media (min-width: 800px) and (min-height: 930px) {\n\t\t\t\t\t\t\t:global(.header, .puzzle, .controls) {\n\t\t\t\t\t\t\t\tfont-size: 1.5em;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@media (max-width: 800px) and (min-width: 600px) {\n\t\t\t\t\t\t\t:global(.header, .puzzle, .controls) {\n\t\t\t\t\t\t\t\tfont-size: 1.2em;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@media (max-height: 930px) and (min-height: 800px) and (min-width: 600px) {\n\t\t\t\t\t\t\t:global(.header, .puzzle, .controls) {\n\t\t\t\t\t\t\t\tfont-size: 1.2em;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@media (max-height: 800px) and (min-height: 600px) and (min-width: 370px) {\n\t\t\t\t\t\t\t:global(.header, .puzzle, .controls) {\n\t\t\t\t\t\t\t\tfont-size: 1em;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@media (max-width: 370px) {\n\t\t\t\t\t\t\t:global(.header, .puzzle, .controls) {\n\t\t\t\t\t\t\t\tfont-size: 0.8em;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@media (max-height: 600px) {\n\t\t\t\t\t\t\t:global(.header, .puzzle, .controls) {\n\t\t\t\t\t\t\t\tfont-size: 0.8em;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t:global(body) {\n\t\t\t\t\t\t\tmargin: 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.rooter {\n\t\t\t\t\t\t\tposition: fixed;\n\t\t\t\t\t\t\tbottom: 0;\n\t\t\t\t\t\t\tfont-size: 0.8em;\n\t\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\t}\n\t\t\t\t\t`}\n\t\t\t\t</style>\n\t\t\t\t<style jsx global>\n\t\t\t\t\t{RangeStyle}\n\t\t\t\t</style>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./pages/index.js"],"sourceRoot":""}