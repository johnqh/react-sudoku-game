{"version":3,"sources":["webpack:///./pages/Board.js?95bb"],"names":["PuzzleStyle","cellWidth","renderCell","board","cell","x","y","selected","onClick","toJSON","value","prefilled","notes","conflict","isConflict","peer","areCoordinatePeers","get","sameValue","isSelected","Board","props","map","row","i","j","toArray","propTypes","PropTypes","object","isRequired","func","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACC;AACA;AACD,IAAMA,6DAGK,yDAAAC,GAAY,CAHjB,+SAWK,yDAAAA,GAAY,CAXjB,+mIAAN;;;yEAGW,yDAAAA,GAAY,C,6TAQZ,yDAAAA,GAAY,C;;AAUvB,SAASC,UAAT,CAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,CAAjC,EAAoCC,CAApC,EAAuCC,QAAvC,EAAiDC,QAAjD,EAA0D;AAAA,oBACrBJ,KAAKK,MAAL,EADqB;AAAA,KACjDC,KADiD,gBACjDA,KADiD;AAAA,KAC1CC,SAD0C,gBAC1CA,SAD0C;AAAA,KAC/BC,KAD+B,gBAC/BA,KAD+B;;AAEzD,KAAMC,WAAW,sEAAAC,CAAWX,KAAX,EAAkBE,CAAlB,EAAqBC,CAArB,CAAjB;AACA,KAAMS,OAAO,+DAAAC,CAAmB,EAAEX,IAAF,EAAKC,IAAL,EAAnB,EAA6BH,MAAMc,GAAN,CAAU,UAAV,CAA7B,CAAb;AACA,KAAMC,YAAY,CAAC,EAAEX,YAAYA,SAASU,GAAT,CAAa,OAAb,CAAZ,IAAqCP,UAAUH,SAASU,GAAT,CAAa,OAAb,CAAjD,CAAnB;;AAEA,KAAME,aAAaf,SAASG,QAA5B;AACA,QACC,4DAAC,sDAAD;AACC,aAAWI,SADZ;AAEC,SAAOC,KAFR;AAGC,aAAWM,SAHZ;AAIC,cAAYC,UAJb;AAKC,UAAQJ,IALT;AAMC,SAAOL,KANR;AAOC,WAAS,mBAAM;AACdF,YAAQH,CAAR,EAAWC,CAAX;AACA,GATF;AAUC,OAAKA,CAVN;AAWC,KAAGD,CAXJ;AAYC,KAAGC,CAZJ;AAaC,YAAUO,QAbX;AAAA;AAAA;AAAA;AAAA;AAAA,GADD;AAiBA;;AAED,IAAMO,QAAQ,SAARA,KAAQ,CAACC,KAAD,EAAW;AAAA,KAChBlB,KADgB,GACakB,KADb,CAChBlB,KADgB;AAAA,KACTI,QADS,GACac,KADb,CACTd,QADS;AAAA,KACCC,OADD,GACaa,KADb,CACCb,OADD;;;AAGxB,QACC;AAAA;AAAA;AAAA,wDAAe,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACEL,QACCc,GADD,CACK,QADL,EAECK,GAFD,CAEK,UAACC,GAAD,EAAMC,CAAN;AAAA;AACJ;AACA;AAAA;AAAA,OAAK,KAAKA,CAAV,uDAAuB,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AACED,SAAID,GAAJ,CAAQ,UAAClB,IAAD,EAAOqB,CAAP;AAAA,aAAavB,WAAWC,KAAX,EAAkBC,IAAlB,EAAwBoB,CAAxB,EAA2BC,CAA3B,EAA8BlB,QAA9B,CAAb;AAAA,MAAR,EAA8DmB,OAA9D;AADF;AAFI;AAAA,GAFL,EAQCA,OARD,EADF;AAAA;AAAA;AAAA;AAAA;AAAA,EADD;AAcA,CAjBD;;AAmBAN,MAAMO,SAAN,GAAkB;AACjBxB,QAAO,kDAAAyB,CAAUC,MAAV,CAAiBC,UADP;AAEjBvB,WAAU,kDAAAqB,CAAUC,MAFH;AAGjBrB,UAAS,kDAAAoB,CAAUG,IAAV,CAAeD;AAHP,CAAlB;;AAMAV,MAAMY,YAAN,GAAqB;AACpBzB,WAAU;AADU,CAArB;;eAIea,K;AAAf;;;;;;;;;;;;yBA5EMpB,W;yBAqBGE,U;yBA0BHkB,K","file":"3.9ac0773284d4ee1861a9.hot-update.js","sourcesContent":["/* eslint-disable react/forbid-prop-types */\n/* eslint-disable max-len */\n/* eslint-disable react/jsx-indent-props */\n/* eslint-disable no-mixed-operators */\n/* eslint-disable no-mixed-spaces-and-tabs */\n/* eslint-disable arrow-parens */\n/* eslint-disable react/jsx-indent */\n/* eslint-disable object-curly-newline */\n/* eslint-disable indent */\n/* eslint-disable no-tabs */\n/* eslint-disable jsx-a11y/accessible-emoji */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport css from 'styled-jsx/css';\n\nimport Cell from './Cell';\nimport { cellWidth } from './utils';\nimport { isPeer as areCoordinatePeers } from '../sudoku';\nimport { isConflict } from './functions';\n\n// eslint-disable-next-line no-lone-blocks\n{\n\t/* language=CSS */\n}\nconst PuzzleStyle = css`\n\t.puzzle {\n\t\tmargin-top: 0.5em;\n\t\twidth: ${cellWidth * 9}em;\n\t\tcursor: pointer;\n\t\tbox-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n\t}\n\t.row {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tflex: 0;\n\t\twidth: ${cellWidth * 9}em;\n\t}\n\t.row:not(:last-child) {\n\t\tborder-bottom: 1px solid black;\n\t}\n\t.row:nth-child(3n + 3):not(:last-child) {\n\t\tborder-bottom: 2px solid black !important;\n\t}\n`;\n\nfunction renderCell(board, cell, x, y, selected, onClick) {\n\tconst { value, prefilled, notes } = cell.toJSON();\n\tconst conflict = isConflict(board, x, y);\n\tconst peer = areCoordinatePeers({ x, y }, board.get('selected'));\n\tconst sameValue = !!(selected && selected.get('value') && value === selected.get('value'));\n\n\tconst isSelected = cell === selected;\n\treturn (\n\t\t<Cell\n\t\t\tprefilled={prefilled}\n\t\t\tnotes={notes}\n\t\t\tsameValue={sameValue}\n\t\t\tisSelected={isSelected}\n\t\t\tisPeer={peer}\n\t\t\tvalue={value}\n\t\t\tonClick={() => {\n\t\t\t\tonClick(x, y);\n\t\t\t}}\n\t\t\tkey={y}\n\t\t\tx={x}\n\t\t\ty={y}\n\t\t\tconflict={conflict}\n\t\t/>\n\t);\n}\n\nconst Board = (props) => {\n\tconst { board, selected, onClick } = props;\n\n\treturn (\n\t\t<div className=\"puzzle\">\n\t\t\t{board\n\t\t\t\t.get('puzzle')\n\t\t\t\t.map((row, i) => (\n\t\t\t\t\t// eslint-disable-next-line react/no-array-index-key\n\t\t\t\t\t<div key={i} className=\"row\">\n\t\t\t\t\t\t{row.map((cell, j) => renderCell(board, cell, i, j, selected)).toArray()}\n\t\t\t\t\t</div>\n\t\t\t\t))\n\t\t\t\t.toArray()}\n\t\t\t<style jsx>{PuzzleStyle}</style>\n\t\t</div>\n\t);\n};\n\nBoard.propTypes = {\n\tboard: PropTypes.object.isRequired,\n\tselected: PropTypes.object,\n\tonClick: PropTypes.func.isRequired,\n};\n\nBoard.defaultProps = {\n\tselected: null,\n};\n\nexport default Board;\n\n\n\n// WEBPACK FOOTER //\n// ./pages/Board.js"],"sourceRoot":""}